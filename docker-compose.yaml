# Default bridge network between containers
networks:
  vulx:
    name: "vulx"
services:
  sql:
    container_name: "sql"
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: local
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d local -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    networks:
      - vulx

  redis:
    container_name: "redis"
    image: redis:6.2-alpine
    volumes:
      - cache:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - vulx
    restart: always
  temporal:
    container_name: "temporal"
    image: temporalio/auto-setup:1.28.1.0
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=password
      - POSTGRES_SEEDS=sql # finds sql service
      - DBNAME=temporal
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    healthcheck: # must health check to wait for namespace creation (will cause race conditon on api otherwise)
      test: ["CMD", "tctl", "--ns", "default", "namespace", "describe"]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - vulx
    ports:
      - "7233:7233"
    depends_on:
      sql:
        condition: service_healthy
  temporal-admin-tools:
    container_name: "temporal-admin-tools"
    image: temporalio/admin-tools:1.28.1-tctl-1.18.4-cli-1.4.1
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    depends_on:
      - temporal
    networks:
      - vulx
    stdin_open: true
    tty: true
  temporal-ui:
    container_name: "temporal-ui"
    image: temporalio/ui:2.39.0
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    networks:
      - vulx
    ports:
      - "8081:8080"
    depends_on:
      - temporal
  ai-service:
    container_name: "vulx-ai-service"
    build:
      context: ai-service
      dockerfile: Dockerfile.dev # need to change this when in prod
    env_file:
      - ai-service/.env
    ports:
      - "9999:9999"
    networks:
      - vulx
  api:
    container_name: "vulx-api"
    build:
      context: api
      dockerfile: Dockerfile
    env_file:
      - api/.env
    ports:
      - "8080:8080"
    networks:
      - vulx
    depends_on: # this dependency forces services to start with make file
      sql:
        condition: service_healthy
      redis:
        condition: service_healthy
      temporal:
        condition: service_healthy
      temporal-admin-tools:
        condition: service_started
      temporal-ui:
        condition: service_started
      ai-service:
        condition: service_started
  app:
    container_name: "vulx-app"
    build:
      context: app
      dockerfile: Dockerfile.dev # need to change this when in prod
    ports:
      - "3000:3000"
    volumes:
      - ./app:/app
      - vulx-app-node-modules:/app/node_modules
    networks:
      - vulx
    depends_on:
      api:
        condition: service_started
volumes:
  pgdata:
  vulx-app-node-modules:
  cache:
